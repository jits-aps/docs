


TPanel



 
  
    
      &lt;&lt; Click to Display Table of Contents &gt;&gt;
      Navigation:&nbsp;
      
      Design Units &gt; Form Designer&nbsp;&gt;
   
      TPanel

    
    
      
      
      
      
      
    
    


  


 



&nbsp;
Description
Use TPanel to put an empty panel on a form. Panels have properties for providing a beveled border around the control, as well as methods to help manage the placement of child controls embedded in the panel. You can also use panels to group TRadioButtons together.
&nbsp;
Object Hierarchy
TPanel - TCustomControl - TWinControl - TControl - TComponent - TPersistent - TObject
&nbsp;
Properties of TPanel
&nbsp;


Name

Description



Align

Determines how the control aligns within its container (parent control).



Alignment

Determines how the caption is aligned within the panel.



Anchors

Specifies how the control is anchored to its parent.



AutoSize

Specifies whether the control sizes itself automatically to accommodate its contents.



BevelInner

Determines the style of the inner bevel of a panel.



BevelOuter

Determines the style of the outer bevel of a panel.



BevelWidth

Determines the width, in pixels, of both the inner and outer bevels of a panel.



BorderStyle

Determines the style of the line drawn around the perimeter of the panel control.



BorderWidth

Specifies the distance, in pixels, between the outer and inner bevels.



Caption

Specifies a text string that identifies the control to the user.



Color

Specifies the background color of the control.



Constraints

Specifies the size constraints for the control.



Ctl3D

Determines whether a control has a three-dimensional (3-D) or two-dimensional look.



Cursor

Specifies the image used to represent the mouse pointer when it passes into the region covered by the control.



Enabled

Controls whether the control responds to mouse and keyboard events.



Font

Contains a TFont object and specifies the attributes of text written on or in the control.



Height

Specifies the vertical size of the control in pixels.



HelpKeyword

Keyword for control's context-sensitive help topic.



Hint

Contains the text string that can appear when the user moves the mouse over the control.



Left

Specifies the horizontal coordinate of the left edge of a component relative to its parent.



Name

Specifies the name of the component as referenced in code.



ParentColor

Determines where a control looks for its color information.



ParentCtl3D

Determines where a component looks to determine if it should appear three dimensional.



ParentFont

Determines where a control looks for its font information.



TabOrder

Indicates the position of the control in its parent's tab order.



TabStop

Determines if the user can tab to a control.



Tag

Stores an integer value as part of a component.
This property is provided for the convenience of developers and has no predefined meaning.



Top

Specifies the Y coordinate of the top left corner of a control, relative to its parent or containing control in pixels.



Visible

Determines whether the component appears on screen.



Width

Specifies the horizontal size of the control or form in pixels.




&nbsp;
Methods of TPanel
&nbsp;


Name

Description



Repaint

Call Repaint to repaint the entire control.



SetFocus

Gives the input focus to the control. When a control has focus, it receives keyboard events.




&nbsp;
Events of TPanel
&nbsp;


Name

Description



OnClick

Occurs when the user clicks the control.



OnDblClick

Occurs when the user double-clicks the left mouse button when the mouse pointer is over the control.



OnEnter

Occurs when a control receives the input focus.



OnExit

Occurs when the input focus shifts away from one control to another.



OnMouseDown

Occurs when the user presses a mouse button with the mouse pointer over a control.



OnMouseEnter

Occurs when the user moves the mouse into a control.



OnMouseLeave

Occurs when the user moves the mouse outside of a control.



OnMouseMove

Occurs when the user moves the mouse pointer while the mouse pointer is over a control.



OnMouseUp

Occurs when the user releases a mouse button that was pressed with the mouse pointer over a component.



OnResize

Occurs immediately after the control is resized.








